{"version":3,"file":"static/js/672.2ff42049.chunk.js","mappings":"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","sources":["components/Navbar/NavbarMenu.styled.jsx","components/Navbar/NavbarMenu.jsx","components/Navbar/NavBar.styled.jsx","components/Navbar/Navbar.jsx","pages/MovieComponents.styled.jsx","pages/MovieComponents.jsx","components/pathToInfo/PatchToInfoFilms.jsx","pages/MoviesDetails.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n`;\n\nexport const Li = styled.li`\n  margin-right: 20px;\n  list-style-type: none;\n`;\n\nexport const NavItem = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  padding: 7px 17px;\n  font-size: 1rem;\n  font-weight: 500;\n  line-height: normal;\n  color: #2e2c2c;\n  transition: all 0.2s ease-in-out;\n  &.active {\n    color: #053d53;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #67d94e;\n  }\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Ul, Li, NavItem } from './NavbarMenu.styled';\n\nconst itemsMenu = [\n  {\n    text: 'Home',\n    id: nanoid(),\n    to: '/',\n  },\n  {\n    text: 'Movies',\n    id: nanoid(),\n    to: '/movies',\n  },\n];\n\nexport default function NavbarMenu() {\n  const elements = itemsMenu.map(({ id, to, text }) => {\n    return (\n      <Li key={id}>\n        <NavItem to={to} end>\n          {text}\n        </NavItem>\n      </Li>\n    );\n  });\n  return <Ul>{elements}</Ul>;\n}\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n`;\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: center;\n`;\nexport const HeaderWrapper = styled.header`\n  margin-bottom: 40px;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\n`;\n","import React from 'react';\nimport NavbarMenu from 'components/Navbar/NavbarMenu';\nimport { HeaderWrapper, Nav } from './NavBar.styled';\n\nexport default function Navbar() {\n  return (\n    <HeaderWrapper>\n      <Nav>\n        <NavbarMenu />\n      </Nav>\n    </HeaderWrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Thumb = styled.div`\n  display: flex;\n`;\nexport const ImgPoster = styled.img`\n  width: 420px;\n  height: 100%;\n`;\n\nexport const ThumbText = styled.div`\n  margin-left: 20px;\n`;\n","import img from '../assets/no_img.jpg';\nimport { Thumb, ThumbText, ImgPoster } from './MovieComponents.styled';\n\nconst MovieComponents = ({ movies }) => {\n  const image_URL = 'https://image.tmdb.org/t/p/w500';\n  const { title, poster_path, vote_average, overview, genres, release_date } =\n    movies;\n  const year = new Date(release_date);\n  const score = () => {\n    return Math.round(Number(vote_average) * 10);\n  };\n\n  return (\n    <Thumb>\n      <div>\n        {poster_path ? (\n          <ImgPoster src={`${image_URL}${poster_path}`} alt={title} />\n        ) : (\n          <ImgPoster src={img} alt=\"no img\" />\n        )}\n      </div>\n      <ThumbText>\n        <h2>\n          {title} ({year.getFullYear()})\n        </h2>\n        <p>User score:{score()}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <div>\n          {genres.map(({ name, id }) => (\n            <p key={id}>{name}</p>\n          ))}\n        </div>\n      </ThumbText>\n    </Thumb>\n  );\n};\n\nexport default MovieComponents;\n","import { NavLink, useLocation } from 'react-router-dom';\n\nexport default function PatchToInfoFilms() {\n  const location = useLocation();\n  const from = location.state?.from ?? '/movies';\n  return (\n    <div>\n      <h2>Information</h2>\n      <ul>\n        <li>\n          <NavLink state={{ from }} to=\"cast\">\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink state={{ from }} to=\"reviews\">\n            Rewiews\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { fetchMoviesOne } from '../services/api';\nimport { Loader } from '../components/Loader/Loader';\nimport MovieComponents from './MovieComponents';\nimport PatchToInfoFilms from '../components/pathToInfo/PatchToInfoFilms';\nimport Navbar from 'components/Navbar/Navbar';\n\n\nexport default function MoviesDetails() {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from ?? '/movies';\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!id) {\n        return;\n      }\n      setLoading(true);\n      try {\n        const data = await fetchMoviesOne({ id });\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [id]);\n  const goBack = () => navigate(from);\n  return (\n    <div>\n      <Navbar />\n      {movies && (\n        <button type=\"button\" onClick={goBack}>\n          Go Back\n        </button>\n      )}\n      {loading && <Loader />}\n      {movies && <MovieComponents movies={movies} />}\n      {movies && <PatchToInfoFilms />}\n      {error && <p>Спробуй ще...</p>}\n      <Outlet />\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst MY_KEY = 'b38b0907dd20d39e91235c8171bbf1c5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.headers.common['Authorization'] = 'b38b0907dd20d39e91235c8171bbf1c5';\n\n\n\nconst fetchTrending = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${MY_KEY}`\n  );\n\n  return response.data;\n};\nconst fetchMoviesOne = async ({ id }) => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${MY_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nconst fetchMovies = async ({ query = '', page = 1 }) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${MY_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  );\n\n  return response.data;\n};\nconst fetchCast = async ({ id }) => {\n  const response = await axios.get(`\n  /movie/${id}/credits?api_key=${MY_KEY}&language=en-US`);\n\n  return response.data;\n};\nconst fetchReviews = async ({ id }) => {\n  const response = await axios.get(`\n  /movie/${id}/reviews?api_key=${MY_KEY}&language=en-US&page=1`);\n\n  return response.data.results;\n};\n\nexport { fetchTrending, fetchMovies, fetchMoviesOne, fetchCast, fetchReviews };","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Ul","styled","Li","NavItem","NavLink","itemsMenu","text","id","nanoid","to","NavbarMenu","elements","map","end","Nav","HeaderWrapper","Navbar","Thumb","ImgPoster","ThumbText","movies","title","poster_path","vote_average","overview","genres","release_date","year","Date","src","alt","img","getFullYear","Math","round","Number","name","PatchToInfoFilms","from","useLocation","state","MoviesDetails","useState","setMovies","error","setError","loading","setLoading","useParams","navigate","useNavigate","useEffect","fetchMovie","fetchMoviesOne","data","type","onClick","Loader","MY_KEY","axios","fetchTrending","response","console","log","fetchMovies","query","page","fetchCast","fetchReviews","results","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}