{"version":3,"file":"static/js/417.ddcbd539.chunk.js","mappings":"wQAAaA,EAAoB,SAAC,GAAgB,IAC1CC,EADyC,EAAbC,OACPC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5C,OACE,2BACE,mCAAWD,MACX,uBAAIC,MAFGF,EAKZ,IACD,OACE,+BACE,wBAAKH,KAGV,ECRc,SAASM,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAEQT,GAAOU,EAAAA,EAAAA,MAAPV,GAkBR,OAjBAW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,uFACbZ,EADa,wDAIlBS,GAAW,GAJO,mBAMGI,EAAAA,EAAAA,IAAa,CAAEb,GAAAA,IANlB,OAMVc,EANU,OAOhBT,EAAUS,GAPM,kDAShBP,EAAS,EAAD,IATQ,yBAWhBE,GAAW,GAXK,6EAAH,qDAcjBG,GACD,GAAE,CAACZ,KAEF,gCACc,OAAXF,IAAmB,SAACF,EAAD,CAAmBE,OAAQA,IAC9CU,IAAW,SAACO,EAAA,EAAD,IACXT,IAAS,wFAGf,C,6LClCKU,EAAS,mCACfC,EAAAA,GAAAA,SAAAA,QAAyB,+BAKzB,IAAMC,EAAa,mCAAG,oGACGD,EAAAA,GAAAA,IAAA,sCACUD,IAFb,cACdG,EADc,yBAKbA,EAASL,MALI,2CAAH,qDAObM,EAAc,mCAAG,8FAASpB,EAAT,EAASA,GAAT,SACEiB,EAAAA,GAAAA,IAAA,iBACXjB,EADW,oBACGgB,EADH,oBADF,cACfG,EADe,OAIrBE,QAAQC,IAAIH,EAASL,MAJA,kBAKdK,EAASL,MALK,2CAAH,sDAQdS,EAAW,mCAAG,wGAASC,MAAAA,OAAT,MAAiB,GAAjB,MAAqBC,KAAAA,OAArB,MAA4B,EAA5B,WACKR,EAAAA,GAAAA,IAAA,gCACID,EADJ,gCACkCS,EADlC,sCACoED,IAFzE,cACZL,EADY,yBAKXA,EAASL,MALE,2CAAH,sDAOXY,EAAS,mCAAG,8FAAS1B,EAAT,EAASA,GAAT,SACOiB,EAAAA,GAAAA,IAAA,qBACdjB,EADc,4BACQgB,EADR,oBADP,cACVG,EADU,yBAITA,EAASL,MAJA,2CAAH,sDAMTD,EAAY,mCAAG,8FAASb,EAAT,EAASA,GAAT,SACIiB,EAAAA,GAAAA,IAAA,qBACdjB,EADc,4BACQgB,EADR,2BADJ,cACbG,EADa,yBAIZA,EAASL,KAAKa,SAJF,2CAAH,qD","sources":["components/ReviewsMovies/ReviewsMoviesList.jsx","components/ReviewsMovies/ReviewsMovies.jsx","services/api.js"],"sourcesContent":["export const ReviewsMoviesList = ({ review }) => {\n  const reviewMovie = review.map(({ id, author, content }) => {\n    return (\n      <li key={id}>\n        <p>Author:{author}</p>\n        <p>{content}</p>\n      </li>\n    );\n  });\n  return (\n    <>\n      <ul>{reviewMovie}</ul>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader/Loader';\nimport { fetchReviews } from '../../services/api';\nimport { ReviewsMoviesList } from './ReviewsMoviesList';\n\nexport default function ReviewsMovies() {\n  const [review, setReview] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchReview = async () => {\n      if (!id) {\n        return;\n      }\n      setLoading(true);\n      try {\n        const data = await fetchReviews({ id });\n        setReview(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReview();\n  }, [id]);\n  return (\n    <>\n      {review !== null && <ReviewsMoviesList review={review} />}\n      {loading && <Loader />}\n      {error && <p>Спробуй ще...</p>}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst MY_KEY = 'b38b0907dd20d39e91235c8171bbf1c5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n// axios.defaults.headers.common['Authorization'] = 'b38b0907dd20d39e91235c8171bbf1c5';\n\n\n\nconst fetchTrending = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${MY_KEY}`\n  );\n\n  return response.data;\n};\nconst fetchMoviesOne = async ({ id }) => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${MY_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nconst fetchMovies = async ({ query = '', page = 1 }) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${MY_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  );\n\n  return response.data;\n};\nconst fetchCast = async ({ id }) => {\n  const response = await axios.get(`\n  /movie/${id}/credits?api_key=${MY_KEY}&language=en-US`);\n\n  return response.data;\n};\nconst fetchReviews = async ({ id }) => {\n  const response = await axios.get(`\n  /movie/${id}/reviews?api_key=${MY_KEY}&language=en-US&page=1`);\n\n  return response.data.results;\n};\n\nexport { fetchTrending, fetchMovies, fetchMoviesOne, fetchCast, fetchReviews };"],"names":["ReviewsMoviesList","reviewMovie","review","map","id","author","content","ReviewsMovies","useState","setReview","error","setError","loading","setLoading","useParams","useEffect","fetchReview","fetchReviews","data","Loader","MY_KEY","axios","fetchTrending","response","fetchMoviesOne","console","log","fetchMovies","query","page","fetchCast","results"],"sourceRoot":""}